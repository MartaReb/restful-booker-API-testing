{
	"info": {
		"_postman_id": "19b7e924-ed11-4973-9365-bae2ac6be288",
		"name": "Restful-booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Happy path",
			"item": [
				{
					"name": "Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "981621e3-0369-425e-a297-54c850aa325e",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "078e93df-7846-4b46-b6b3-24e8ad5b6da1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseURL}}/ping"
					},
					"response": []
				},
				{
					"name": "Get ID numbers for all booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "42d6c5a8-b240-480e-a794-1e1c5e79360b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.test(\"At least one booking exists\", () => {\r",
									"    pm.expect(response).to.be.an('array');\r",
									"    pm.expect(response.length).to.be.above(0);\r",
									"\r",
									"    const booking = response[0];\r",
									"    pm.expect(booking).to.be.an('object');\r",
									"    pm.expect(booking).to.haveOwnProperty('bookingid');\r",
									"    pm.expect(booking.bookingid).to.be.a('number');\r",
									"});\r",
									"\r",
									"pm.environment.set(\"bookingID\", response[0].bookingid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "652298ae-76ed-45f2-9c32-9a811a9f6ea7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5a1a58e8-858c-4c19-b283-d52695341309",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseURL}}/booking"
					},
					"response": []
				},
				{
					"name": "Get booking with the specific ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02caa17e-9029-46cc-8dc1-6ecca0dbc664",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"        \"firstname\": {\"type\": \"string\"},\r",
									"        \"lastname\": {\"type\": \"string\"},\r",
									"        \"totalprice\": {\"type\": \"number\"},\r",
									"        \"depositpaid\": {\"type\": \"boolean\"},\r",
									"        \"bookingdates\": {\r",
									"            \"checkin\": {\"type\": \"date\"},\r",
									"            \"checkout\": {\"type\": \"date\"}\r",
									"        },\r",
									"        \"additionalneeds\": {\"type\": \"string\"},\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Validate response schema\", () =>  {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.environment.set(\"firstname\", response.firstname);\r",
									"pm.environment.set(\"lastname\", response.lastname);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8f84302f-d88d-450a-aafe-564ed10e1947",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking/:id",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								":id"
							],
							"variable": [
								{
									"id": "5f9dd205-1fc5-486b-82ac-b073648f12bb",
									"key": "id",
									"value": "{{bookingID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get IDs of the booking with the specific first name and last name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "59cddfcc-c262-4b5c-b4db-66b5b846c741",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.test(\"At least one booking exists\", () => {\r",
									"    pm.expect(response).to.be.an('array');\r",
									"    pm.expect(response).is.not.empty;\r",
									"    pm.expect(response[0]).to.have.property('bookingid');\r",
									"    pm.expect(response[0].bookingid).to.be.a('number');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7de849b3-677a-46cf-a13b-311f8483c76e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking?firstname={{firstname}}&lastname={{lastname}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "firstname",
									"value": "{{firstname}}"
								},
								{
									"key": "lastname",
									"value": "{{lastname}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an auth token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b86411d-fe1f-42cf-9f61-c2d250b43d21",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.test(\"An access token is returned\", () => {\r",
									"    pm.expect(response).to.have.property('token');\r",
									"    pm.expect(response.token).to.be.a('string');\r",
									"});\r",
									"pm.environment.set(\"authToken\", response.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "21f6b61f-9a28-4a22-8fb1-03dddbdc10c6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/auth"
					},
					"response": []
				},
				{
					"name": "Create a new booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8cf7641-e859-4b54-908b-1f21a7924600",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.test(\"Booking should be created\", () => {\r",
									"    pm.expect(response).to.be.an('object');\r",
									"    pm.expect(response).is.not.empty;\r",
									"    pm.expect(response.booking.firstname).to.eql(\"John\");\r",
									"    pm.expect(response.booking.lastname).to.eql(\"Travolta\");\r",
									"    pm.expect(response.booking.totalprice).to.eql(234);\r",
									"    pm.expect(response.booking.depositpaid).to.eql(true);\r",
									"    pm.expect(response.booking.bookingdates.checkin).to.eql(\"2018-06-20\");\r",
									"    pm.expect(response.booking.bookingdates.checkout).to.eql(\"2018-06-30\");\r",
									"    pm.expect(response.booking.additionalneeds).to.eql(\"Breakfast\");\r",
									"});\r",
									"\r",
									"pm.environment.set(\"bookingID\", response.bookingid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8dc4103d-45b1-43f3-8afe-b2d5d8831fdf",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8417f367-7fbc-4bb6-9d3d-6146c6d4f12b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"John\",\r\n    \"lastname\" : \"Travolta\",\r\n    \"totalprice\" : 234,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-06-20\",\r\n        \"checkout\" : \"2018-06-30\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/booking"
					},
					"response": []
				},
				{
					"name": "Get IDs of the booking with the specific check in and check out",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bea5762c-a78f-4c93-a4d3-02d61b5ff3ed",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.test(\"At least one booking exists\", () => {\r",
									"    pm.expect(response).to.be.an('array');\r",
									"    pm.expect(response).is.not.empty;\r",
									"    pm.expect(response[0]).to.have.property('bookingid');\r",
									"    pm.expect(response[0].bookingid).to.be.a('number');\r",
									"});\r",
									"\r",
									"const newBooking = pm.environment.get('bookingID');\r",
									"pm.test(\"New booking is on the list\", () => {\r",
									"    let newNumber = false;\r",
									"    response.forEach((item) => {\r",
									"        if (item.bookingid === newBooking){\r",
									"            newNumber = true;\r",
									"        }\r",
									"    });\r",
									"    pm.expect(newNumber).to.eql(true);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6e10fab3-e999-4e8c-bf2d-20af2d96ef14",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking?checkin=2018-01-01&checkout=2019-01-01",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "checkin",
									"value": "2018-01-01"
								},
								{
									"key": "checkout",
									"value": "2019-01-01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update part of the booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89f8430e-8f2c-4f79-8088-4da1eef24d76",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.test(\"Booking should be changed\", () => {\r",
									"    pm.expect(response).to.be.an('object');\r",
									"    pm.expect(response).is.not.empty;\r",
									"    pm.expect(response.firstname).to.eql(\"John\");\r",
									"    pm.expect(response.lastname).to.eql(\"Lennon\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0ea58ad0-9500-48ed-bfce-66c4700d6288",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"John\",\r\n    \"lastname\": \"Lennon\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/booking/:id",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								":id"
							],
							"variable": [
								{
									"id": "d16f29ff-f6e5-475d-a0f2-115b65d09c6e",
									"key": "id",
									"value": "{{bookingID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update  the entire booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25d0d64b-bef2-4990-9f77-1145713fb1b9",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.test(\"Booking should be updated\", () => {\r",
									"    pm.expect(response).to.be.an('object');\r",
									"    pm.expect(response).is.not.empty;\r",
									"    pm.expect(response.firstname).to.eql(\"Johnny\");\r",
									"    pm.expect(response.lastname).to.eql(\"Cash\");\r",
									"    pm.expect(response.totalprice).to.eql(777);\r",
									"    pm.expect(response.depositpaid).to.eql(false);\r",
									"    pm.expect(response.bookingdates.checkin).to.eql(\"2020-06-20\");\r",
									"    pm.expect(response.bookingdates.checkout).to.eql(\"2020-06-30\");\r",
									"    pm.expect(response.additionalneeds).to.eql(\"Birthday party\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "fc912362-7d75-45d1-b249-071edaa10bb6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Johnny\",\r\n    \"lastname\": \"Cash\",\r\n    \"totalprice\": 777,\r\n    \"depositpaid\": false,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2020-06-20\",\r\n        \"checkout\": \"2020-06-30\"\r\n    },\r\n    \"additionalneeds\": \"Birthday party\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/booking/:id",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								":id"
							],
							"variable": [
								{
									"id": "1fb3d11e-c0c5-497a-b661-efd1f467cf38",
									"key": "id",
									"value": "{{bookingID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2dd87839-86a4-4b18-a1e5-3bfcda4ca8cb",
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.environment.unset(\"authToken\");\r",
									"pm.environment.unset(\"bookingID\");\r",
									"pm.environment.unset(\"firstname\");\r",
									"pm.environment.unset(\"lastname\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8df85d36-4845-4db1-a6b7-a3a9a80ef10f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/booking/:id",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								":id"
							],
							"variable": [
								{
									"id": "a3f3377c-54bb-4978-9a57-dc1d72bba02a",
									"key": "id",
									"value": "{{bookingID}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "a46fa398-eea9-4add-bfba-35ff3f27d935"
		},
		{
			"name": "Update the entire booking - missing authorization",
			"item": [
				{
					"name": "Create an auth token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1aa0365b-3879-4a11-959e-67bb2eb63571",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.test(\"An access token is returned\", () => {\r",
									"    pm.expect(response).to.have.property('token');\r",
									"    pm.expect(response.token).to.be.a('string');\r",
									"});\r",
									"pm.environment.set(\"authToken\", response.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "27af4745-a434-4b89-a8e1-132ec8df1fa5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/auth"
					},
					"response": []
				},
				{
					"name": "Create a new booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d4714e9-6ab2-49b3-a30b-5ef5bdf9e273",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.test(\"Booking should be created\", () => {\r",
									"    pm.expect(response).to.be.an('object');\r",
									"    pm.expect(response).is.not.empty;\r",
									"    pm.expect(response.booking.firstname).to.eql(\"John\");\r",
									"    pm.expect(response.booking.lastname).to.eql(\"Travolta\");\r",
									"    pm.expect(response.booking.totalprice).to.eql(234);\r",
									"    pm.expect(response.booking.depositpaid).to.eql(true);\r",
									"    pm.expect(response.booking.bookingdates.checkin).to.eql(\"2018-06-20\");\r",
									"    pm.expect(response.booking.bookingdates.checkout).to.eql(\"2018-06-30\");\r",
									"    pm.expect(response.booking.additionalneeds).to.eql(\"Breakfast\");\r",
									"});\r",
									"\r",
									"pm.environment.set(\"bookingID\", response.bookingid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ab24f9be-0135-4f99-b21c-5ad08e83627b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "954a873b-e59c-49e1-a99b-e9d6b7af7bd4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"John\",\r\n    \"lastname\" : \"Travolta\",\r\n    \"totalprice\" : 234,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-06-20\",\r\n        \"checkout\" : \"2018-06-30\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/booking"
					},
					"response": []
				},
				{
					"name": "Update  the entire booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "20f74492-d889-4268-ace1-c5ca3bc34622",
								"exec": [
									"pm.test(\"Status code is 403\", () => {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "626f6dc8-dbe0-446d-9b7e-58be6b8ee197",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Johnny\",\r\n    \"lastname\": \"Cash\",\r\n    \"totalprice\": 777,\r\n    \"depositpaid\": false,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2020-06-20\",\r\n        \"checkout\": \"2020-06-30\"\r\n    },\r\n    \"additionalneeds\": \"Birthday party\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/booking/:id",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								":id"
							],
							"variable": [
								{
									"id": "2d831462-61e1-486e-9f8a-65b65db34426",
									"key": "id",
									"value": "{{bookingID}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "ab768794-21aa-437b-8411-47ae076279a7"
		},
		{
			"name": "Update the entire booking - invalid token",
			"item": [
				{
					"name": "Create an auth token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "482e8fdb-f0d9-454f-a4ae-696203cef350",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.test(\"An access token is returned\", () => {\r",
									"    pm.expect(response).to.have.property(\"token\");\r",
									"    pm.expect(response.token).to.be.a(\"string\");\r",
									"});\r",
									"pm.environment.set(\"authToken\", response.token + 1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "08a8c866-09bc-4e18-8c24-4bba2b085ae4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/auth"
					},
					"response": []
				},
				{
					"name": "Create a new booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32f8059a-d19c-4e29-8cc2-ae326068fa05",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.test(\"Booking should be created\", () => {\r",
									"    pm.expect(response).to.be.an('object');\r",
									"    pm.expect(response).is.not.empty;\r",
									"    pm.expect(response.booking.firstname).to.eql(\"John\");\r",
									"    pm.expect(response.booking.lastname).to.eql(\"Travolta\");\r",
									"    pm.expect(response.booking.totalprice).to.eql(234);\r",
									"    pm.expect(response.booking.depositpaid).to.eql(true);\r",
									"    pm.expect(response.booking.bookingdates.checkin).to.eql(\"2018-06-20\");\r",
									"    pm.expect(response.booking.bookingdates.checkout).to.eql(\"2018-06-30\");\r",
									"    pm.expect(response.booking.additionalneeds).to.eql(\"Breakfast\");\r",
									"});\r",
									"\r",
									"pm.environment.set(\"bookingID\", response.bookingid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0d964095-7c8b-4bab-b7ee-f1eb29ac535b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "66b08d78-9fee-41b1-933f-1e7446da443a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"John\",\r\n    \"lastname\" : \"Travolta\",\r\n    \"totalprice\" : 234,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-06-20\",\r\n        \"checkout\" : \"2018-06-30\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/booking"
					},
					"response": []
				},
				{
					"name": "Update  the entire booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "783c4938-407c-4d48-ba14-3431518291cc",
								"exec": [
									"pm.test(\"Status code is 403\", () => {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1bb075ea-1865-4847-842d-9a2732919d97",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Johnny\",\r\n    \"lastname\": \"Cash\",\r\n    \"totalprice\": 777,\r\n    \"depositpaid\": false,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2020-06-20\",\r\n        \"checkout\": \"2020-06-30\"\r\n    },\r\n    \"additionalneeds\": \"Birthday party\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/booking/:id",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								":id"
							],
							"variable": [
								{
									"id": "bc09a437-a301-43bf-acef-2305f05462a2",
									"key": "id",
									"value": "{{bookingID}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "1cfd768e-daa6-4ec5-875c-dbeaf1444c7c"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "a547c0e3-f8f1-4b1a-b6cd-52d7574a9d18"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "c43bff04-d815-4833-9c1c-2eb6394d0f71"
			}
		}
	],
	"variable": [
		{
			"id": "de323618-6f4d-4e67-b11f-a71444d1ff21",
			"key": "baseURL",
			"value": "https://restful-booker.herokuapp.com"
		},
		{
			"id": "ada5d302-fb59-44d2-a07d-b559420d9dd5",
			"key": "accessToken",
			"value": "your access token",
			"type": "string"
		}
	]
}